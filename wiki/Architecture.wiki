#summary Description of program architecture.

_NB._ This is currently all just  me spitballing, trying out a particular way of doing things, if you can think of a better way let me know!

= MIDlet =

  * Maintains a CanvasMap object, which is it's only link to each canvas. this allows for easy disposal of canvases that have been finished.

= Events =

  # MIDlet defines a global EventListener class.
  # A canvas that extends CastawayGameCanvas requires the EventListener to be passed to it's constructor
  # When an event should occur, the canvas calls the doEvent() method with a new Event object, the event type is specified by selecting on the the final static strings from the Event class
  # The EventListener  asynchronously registers the event and the Event's referrer and takes the appropriate action in a new thread.
  # If the event would cause the end of the canvas, the canvas must dispose of its objects, then throw a further EVENT_CONTROL_END event. This doesn't interfere with program flow, as flow continues on a different thread. the canvas is disposed of in the background.

= Canvas' =

  * Contain their own game loop thats runs on a new thread
  * Are responsible for disposing of their own objects when instructed to
  * Handle all internal events themselves, pass external events to EventListener